exeiac (BRICK_PATH|BRICK_NAME) (install|init|plan|apply|output|destroy|validate|fmt|help|show_dependencies|show_dependents|list_bricks) [OPTIONS]
exeiac (list_bricks|help)
exeiac debug FUNCTION

ACTIONS:
install: installs or check that all tools are installs to execute 
    the brick
init: get some dependencies, typically download terraform modules
    or ansible deps
plan: a dry run to check what we want to apply
apply: run the IaC with the right tools
output: display some outputs that can be used by other bricks
destroy: revert the apply
validate: validate that the syntaxe is ok
fmt: rewrite file to pass linter
help: display help for this brick or general help
show_dependencies: get brick_name whom output is needed
show_dependents: get all brick_name that call the brick's output
show_dependencies_recursively: get dependencies and dependencies of dependencies
show_dependents_recursively: get dependents and dependents of dependents...
list_bricks: list all elementary brick of the super brick or all elementary
    bricks
debug: run a function of this file (use for unitary tests)

BOOLEAN OPTIONS:
-non-interactive
-init-before
-output-after
-plan-dependencies-before: and fail if there is a diff  or an error
-plan-dependencies-recursively-before: and fail if there is a diff or an error
-plan-dependents-before: and fail if there is a diff or an error
-plan-dependents-recursively-before: and fail if there is a diff or an error
-plan-dependents-after:
-apply-dependents-after: (stop applying if one failed)
-apply-dependents-recursively-after: (stop applying if one failed)

SINGLE LINE STRING OPTIONS:
-unit-testing-function="EXEIAC_FUNCTION ARG1 ARG2..."
-bricks-specifier=all
-bricks-specifier=dependencies
-bricks-specifier=recursive-dependencies
-bricks-specifier=dependents
-bricks-specifier=recursive-dependents


MULTI LINES STRING OPTIONS:
-bricks-paths-list
-bricks-names-list

